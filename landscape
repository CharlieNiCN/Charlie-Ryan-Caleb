import pygame
import math
import sys

pygame.init()

WIDTH = 640
HEIGHT = 480
SIZE = (WIDTH, HEIGHT)

screen = pygame.display.set_mode(SIZE)
clock = pygame.time.Clock()

# ---------------------------
# Initialize global variables

circle_x = 65
circle_y = 220

rect_x = 0
rect_y = 200

circle1_x = 200
circle1_y = 270

rect1_x = 250
rect1_y = 250

circle2_x = 500
circle2_y = 290

rect3_x = 500
rect3_y = 190

rect4_x = -120
rect4_y = 149
# ---------------------------
  
# make floor
floor = (circle_x, circle_y)
floor_1 = pygame.Rect(rect_x , rect_y, 200, 500)
floor_2 = (circle1_x, circle1_y)
floor_3 = pygame.Rect(rect1_x, rect1_y, 200, 500)
floor_4 = (circle2_x, circle2_y)
floor_5 = pygame.Rect(rect3_x, rect3_y, 200, 500)
floor_6 = pygame.Rect(rect4_x, rect4_y, 190, 1000)


# collisions
def circle_collision(circle_center, circle_radius, rect):
    rect_center = (rect.centerx, rect.centery)
    distance = math.hypot(rect_center[0] - circle_center[0], rect_center[1] - circle_center[1])
    return distance < circle_radius + rect.width // 2

def green_tank_circle_collision(circle_center, circle_radius, rect):
        rect_center = (rect.centerx, rect.centery)
        distance = math.hypot(rect_center[0] - circle_center[0], rect_center[1] - circle_center[1])
        return distance < circle_radius + rect.width // 2
    

def red_tank_circle_collision(floor, 70, red_tank):
    red_tank_center = (red_tank_x, red_tank_y)
    distance = math.hypot(red_tank_center[0] - floor[0], red_center[1] - floor[1])
    return distance < 70 + red_tank_width // 2


running = True
while running:
    # EVENT HANDLING
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # GAME STATE UPDATES
    # All game math and comparisons happen here

    # DRAWING
    screen.fill((140, 170, 255))  # always the first drawing command

    pygame.draw.circle(screen, (0, 100, 0), (circle_x, circle_y), 70)
    pygame.draw.rect(screen, (0, 100, 0), (rect_x, rect_y, 200, 500), 200)
    pygame.draw.rect(screen, (0, 100, 0), (rect1_x, rect1_y, 200, 500), 200)
    pygame.draw.circle(screen, (0, 100, 0), (circle1_x, circle1_y), 70)
    pygame.draw.circle(screen, (0, 100, 0), (circle2_x, circle2_y), 100)
    pygame.draw.rect(screen, (0, 100, 0), (rect3_x, rect3_y, 200, 500), 20)
    pygame.draw.rect(screen, (0, 100, 0), (rect4_x, rect4_y, 190, 1000), 100)






    # Must be the last two lines
    # of the game loop
    pygame.display.flip()
    clock.tick(30)
    #---------------------------


pygame.quit()